/* Tiptap Editor Styles */
.ProseMirror {
  padding: 12px;
  min-height: 100px;
  outline: none;
}

/* Display-only styles (for RichTextDisplay component) */
.ProseMirror[contenteditable="false"] {
  padding: 0;
  min-height: auto;
}

.ProseMirror[contenteditable="false"] p {
  margin: 0.1em 0;
}

.ProseMirror[contenteditable="false"] ul,
.ProseMirror[contenteditable="false"] ol {
  margin: 0.1em 0;
  padding-left: 1.2rem;
}

.ProseMirror[contenteditable="false"] li {
  margin: 0;
}

.ProseMirror p.is-editor-empty:first-child::before {
  color: var(--mantine-color-dimmed);
  content: attr(data-placeholder);
  float: left;
  height: 0;
  pointer-events: none;
}

.ProseMirror p {
  margin: 0.5em 0;
}

.ProseMirror p:first-child {
  margin-top: 0;
}

.ProseMirror p:last-child {
  margin-bottom: 0;
}

.ProseMirror ul,
.ProseMirror ol {
  padding-left: 1.5rem;
  margin: 0.5em 0;
}

.ProseMirror ul {
  list-style-type: disc;
}

.ProseMirror ol {
  list-style-type: decimal;
}

.ProseMirror li {
  margin: 0.25em 0;
}

.ProseMirror code {
  background-color: rgba(97, 97, 97, 0.1);
  border-radius: 3px;
  padding: 2px 4px;
  font-family: 'Courier New', monospace;
  font-size: 0.9em;
}

.ProseMirror pre {
  background-color: rgba(97, 97, 97, 0.1);
  border-radius: 4px;
  padding: 12px;
  font-family: 'Courier New', monospace;
  overflow-x: auto;
  margin: 0.5em 0;
}

.ProseMirror pre code {
  background: none;
  padding: 0;
}

.ProseMirror strong {
  font-weight: 700;
}

.ProseMirror em {
  font-style: italic;
}

.ProseMirror s {
  text-decoration: line-through;
}

.ProseMirror blockquote {
  border-left: 3px solid var(--mantine-color-gray-4);
  padding-left: 1rem;
  margin: 1em 0;
  color: var(--mantine-color-dimmed);
}

.ProseMirror h1,
.ProseMirror h2,
.ProseMirror h3 {
  margin: 1em 0 0.5em;
  font-weight: 600;
  line-height: 1.3;
}

.ProseMirror h1 {
  font-size: 1.5em;
}

.ProseMirror h2 {
  font-size: 1.3em;
}

.ProseMirror h3 {
  font-size: 1.1em;
}

/* Link styles */
.ProseMirror a {
  color: var(--mantine-color-blue-6);
  text-decoration: underline;
  cursor: pointer;
  transition: color 0.2s ease;
  position: relative;
}

.ProseMirror a:hover {
  color: var(--mantine-color-blue-7);
}

/* Link preview on hover */
.ProseMirror a::after {
  content: attr(href);
  position: absolute;
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%) translateY(-4px);
  background-color: rgba(0, 0, 0, 0.9);
  color: white;
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 12px;
  white-space: nowrap;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.2s ease;
  z-index: 1000;
  max-width: 300px;
  overflow: hidden;
  text-overflow: ellipsis;
}

.ProseMirror a:hover::after {
  opacity: 1;
}

/* Dark mode adjustments */
[data-mantine-color-scheme='dark'] .ProseMirror code {
  background-color: rgba(255, 255, 255, 0.1);
}

[data-mantine-color-scheme='dark'] .ProseMirror pre {
  background-color: rgba(255, 255, 255, 0.05);
}

[data-mantine-color-scheme='dark'] .ProseMirror blockquote {
  border-left-color: var(--mantine-color-dark-4);
}

[data-mantine-color-scheme='dark'] .ProseMirror a {
  color: var(--mantine-color-blue-4);
}

[data-mantine-color-scheme='dark'] .ProseMirror a:hover {
  color: var(--mantine-color-blue-3);
}
